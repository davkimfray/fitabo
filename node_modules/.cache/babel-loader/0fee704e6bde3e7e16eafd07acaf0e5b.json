{"ast":null,"code":"var _jsxFileName = \"/home/davkimfray/WebstormProjects/fitabo/src/components/FitaboServices.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../styles/fitaboServices.css\";\nimport fitaboServices from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FitaboServices() {\n  _s();\n\n  const data = useStaticQuery(graphql`\n    query FitaboServicesQuery {\n      allFitaboServicesJson {\n        nodes {\n          id\n          title\n          details\n          img {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const fitaboServices = data.allFitaboServicesJson.nodes;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"serviceWrapper\",\n    children: fitaboServices.map((service, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: (index + 1) % 2 === 0 ? \"row\" : \"row reverse\",\n      children: [/*#__PURE__*/_jsxDEV(Img, {\n        className: \"image\",\n        fluid: service.img.childImageSharp.fluid,\n        alt: service.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: service.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: service.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, service.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FitaboServices, \"2NJItrGYEZzfj2zyg3qTWGZLI2Q=\", true);\n\n_c = FitaboServices;\n\nvar _c;\n\n$RefreshReg$(_c, \"FitaboServices\");","map":{"version":3,"sources":["/home/davkimfray/WebstormProjects/fitabo/src/components/FitaboServices.js"],"names":["React","fitaboServices","FitaboServices","data","useStaticQuery","graphql","allFitaboServicesJson","nodes","map","service","index","img","childImageSharp","fluid","title","details","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAOC,cAAP,MAA2B,SAA3B;;AACA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,IAAI,GAAGC,cAAc,CAACC,OAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjB6B,CAA3B;AAmBA,QAAMJ,cAAc,GAAGE,IAAI,CAACG,qBAAL,CAA2BC,KAAlD;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA,cACGN,cAAc,CAACO,GAAf,CAAmB,CAACC,OAAD,EAAUC,KAAV,kBAClB;AAAsB,MAAA,SAAS,EAAG,CAACA,KAAK,GAAC,CAAP,IAAY,CAAb,KAAoB,CAApB,GAAwB,KAAxB,GAAgC,aAAjE;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAED,OAAO,CAACE,GAAR,CAAYC,eAAZ,CAA4BC,KAA1D;AAAiE,QAAA,GAAG,EAAEJ,OAAO,CAACK;AAA9E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAA,oBAAKL,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIL,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUN,OAAO,CAACO,EAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAnCuBd,c;;KAAAA,c","sourcesContent":["import React from \"react\"\nimport \"../styles/fitaboServices.css\"\nimport fitaboServices from \"../data\"\nexport default function FitaboServices() {\n  const data = useStaticQuery(graphql`\n    query FitaboServicesQuery {\n      allFitaboServicesJson {\n        nodes {\n          id\n          title\n          details\n          img {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const fitaboServices = data.allFitaboServicesJson.nodes\n\n  return (\n    <section className=\"serviceWrapper\">\n      {fitaboServices.map((service, index) => (\n        <div key={service.id} className={((index+1) % 2) === 0 ? \"row\" : \"row reverse\"}>\n          <Img className=\"image\" fluid={service.img.childImageSharp.fluid} alt={service.title} />\n          <div className=\"details\">\n            <h2>{service.title}</h2>\n            <p>{service.details}</p>\n          </div>\n        </div>\n      ))}\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}